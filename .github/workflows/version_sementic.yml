name: Persimmon Versioning

on:
  pull_request:
    branches: 
      - main
    types:
      - closed
   


jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 

   

    - name: Get the latest tag
      id: get_latest_tag
      run: echo echo ::set-output name=TAG::$(git describe --tags --abbrev=0)


    - name: Remove "v" prefix from tag
      id: remove_prefix
      run: |
        TAG_NO_PREFIX=$(echo "${{ steps.get_latest_tag.outputs.TAG }}" | sed 's/^v//')
        echo "TAG_NO_PREFIX=${TAG_NO_PREFIX}" >> $GITHUB_ENV

         
    - name: Extract version components
      id: extract_version
      run: |
        if [[ -z "${{ steps.remove_prefix.outputs.TAG_NO_PREFIX }}" ]]; then
          echo "Error: TAG_NO_PREFIX is empty or undefined."
        exit 1
        fi

        IFS='.' read -ra TAG_PARTS <<< "${{ steps.remove_prefix.outputs.TAG_NO_PREFIX }}"
        if [[ ${#TAG_PARTS[@]} -lt 3 ]]; then
          echo "Error: TAG_NO_PREFIX does not have the expected format (MAJOR.MINOR.PATCH)."
          exit 1
        fi


        MAJOR="${TAG_PARTS[0]}"
        MINOR="${TAG_PARTS[1]}"
        PATCH="${TAG_PARTS[2]}"

        ((PATCH++))

        NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"

        echo "::set-output name=NEW_VERSION::${NEW_VERSION}"





        
        
        






